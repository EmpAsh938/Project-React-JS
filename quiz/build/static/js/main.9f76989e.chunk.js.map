{"version":3,"sources":["context.js","Modal.js","SetupForm.js","Loading.js","Questions.js","App.js","index.js"],"names":["AppContext","React","createContext","category","sports","history","politics","AppProvider","children","useState","isLoading","setIsLoading","error","setError","index","setIndex","subject","setSubject","level","setLevel","questions","setQuestions","showQuestion","setShowQuestion","score","setScore","count","setCount","total","setTotal","showResult","setShowResult","answerCorrectness","setAnswerCorrectness","fetchReq","url","a","fetch","response","json","data","results","console","log","Provider","value","handleChange","e","name","target","handleStart","preventDefault","checkAnswer","param","correct_answer","res","parseInt","toPrecision","handleScore","useGlobalContext","useContext","Modal","className","onClick","SetupForm","onSubmit","htmlFor","number","of","type","id","min","max","onChange","Loading","Questions","ques","question","options","incorrect_answers","randomPos","Math","floor","random","length","splice","dangerouslySetInnerHTML","__html","map","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f76989e.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nconst AppContext = React.createContext();\n\nconst category = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n};\n\n// const tempUrl = \"https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple\";\n\nconst AppProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [index, setIndex] = useState(1);\n  const [subject, setSubject] = useState(\"sports\");\n  const [level, setLevel] = useState(\"easy\");\n  const [questions, setQuestions] = useState([]);\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [score, setScore] = useState(0);\n  const [count, setCount] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [answerCorrectness, setAnswerCorrectness] = useState(0);\n\n  const fetchReq = async (url) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setQuestions([...data.results]);\n      setShowQuestion(true);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === \"number\") {\n      setIndex(value);\n    } else if (name === \"category\") {\n      setSubject(value);\n    } else if (name === \"difficulty\") {\n      setLevel(value);\n    }\n  };\n\n  const handleStart = (e) => {\n    e.preventDefault();\n    if (!index) {\n      setError(true);\n    } else {\n      setError(false);\n      fetchReq(\n        `https://opentdb.com/api.php?amount=${index}&category=${category[subject]}&difficulty=${level}&type=multiple`\n      );\n    }\n  };\n\n  const checkAnswer = (param) => {\n    // checking for correct answer\n    if (param === questions[total].correct_answer) {\n      setScore(score + 1);\n    } else {\n      setScore(score);\n    }\n    setCount(count + 1);\n\n    // increasing the index\n    if (total === index - 1) {\n      setTotal(total);\n      setShowResult(true);\n      const res = parseInt((score / count) * 100);\n      setAnswerCorrectness(res.toPrecision());\n    } else {\n      setTotal(total + 1);\n    }\n  };\n\n  const handleScore = () => {\n    setShowQuestion(false);\n    setIsLoading(false);\n    setQuestions(false);\n    setShowResult(false);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        isLoading,\n        error,\n        index,\n        subject,\n        level,\n        handleChange,\n        handleStart,\n        showQuestion,\n        questions,\n        checkAnswer,\n        score,\n        total,\n        showResult,\n        count,\n        handleScore,\n        answerCorrectness,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppProvider, AppContext };\n","import React from \"react\";\nimport { useGlobalContext } from './context'\n\nconst Modal = () => {\n  const {handleScore, answerCorrectness} = useGlobalContext()\n  return (\n    <section className='final'>\n      <article className='final-box'>\n        <h2 className='header'>congrats!</h2>\n  <p className='final-header'>You answered {answerCorrectness}% of questions correctly</p>\n        <button \n        onClick={handleScore}\n        className='btn btn-replay'\n        >play again</button>\n      </article>\n    </section>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { useGlobalContext } from './context'\n\nconst SetupForm = () => {\n  const { error, index, subject, level, handleChange, handleStart } = useGlobalContext()\n  return (\n    <>\n      <section className=\"modal\">\n        <div className=\"modal-box\">\n            <h2 className=\"header\">setup quiz</h2>\n          <form className=\"modal-form\" onSubmit={handleStart}>\n            {/* number of questions */}\n            <div className=\"form-input\">\n              <label htmlFor=\"questions\" number of questions>\n                Number of Questions\n              </label>\n              <input type=\"number\" name=\"number\" id=\"questions\" min=\"1\" max=\"50\" value={index} onChange={handleChange}/>\n            </div>\n            {/* category */}\n            <div className=\"form-input\">\n              <label htmlFor=\"category\">category</label>\n              <select name=\"category\" id=\"category\" value={subject} onChange={handleChange}>\n                <option value=\"sports\">sports</option>\n                <option value=\"history\">history</option>\n                <option value=\"politics\">politics</option>\n              </select>\n            </div>\n            {/* difficulty */}\n            <div className=\"form-input\">\n              <label htmlFor=\"difficulty\">select difficulty</label>\n              <select name=\"difficulty\" id=\"difficulty\" value={level} onChange={handleChange}>\n                <option value=\"easy\">easy</option>\n                <option value=\"medium\">medium</option>\n                <option value=\"hard\">hard</option>\n              </select>\n            </div>\n            <div className=\"modal-btn\">\n              {error && (\n                <p className=\"error\">\n                  can't generate questions, please try different options\n                </p>\n              )}\n              <button className=\"btn btn-next\" onClick={handleStart}>start</button>\n            </div>\n          </form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default SetupForm;\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Loading = () => {\n    const {isLoading} = useGlobalContext()\n    return (\n        <section className={isLoading ? 'section-loader show-loader' : 'section-loader'}>\n            <div className='loader'></div>\n        </section>\n    )\n}\n\nexport default Loading\n","import React from \"react\";\nimport { useGlobalContext } from './context'\n\nconst Questions = () => {\n  const { questions, checkAnswer, score, total, count} = useGlobalContext()\n\n  // console.log(questions.length)\n  // const tempIndex = total\n  const ques = questions[total].question\n  const options = [...questions[total].incorrect_answers]\n  const randomPos = Math.floor(Math.random() * options.length)\n  // console.log(randomPos)\n  options.splice(randomPos,0,questions[total].correct_answer)\n  // console.log(options)\n\n\n  return (\n    <div className='question-cont'>\n    <section className=\"question\">\n      <p className=\"check-answer\">correct answers: {score}/{count}</p>\n      <article className=\"question-box\">\n        <h2 className=\"header question-header\" dangerouslySetInnerHTML={{__html: ques}}>\n          {/* {ques} */}\n        </h2>\n        <div className=\"question-btn\">\n          {options.map((item,index) => {\n            return (\n              <button\n              onClick={()=>checkAnswer(item)} \n              className=\"btn btn-options\" \n              key={index}\n              >{item}</button>\n            )\n          })}\n        </div>\n      </article>\n      <button \n      onClick={checkAnswer}\n      className=\"btn btn-next btn-question\">next question</button>\n    </section>\n    </div>\n  );\n};\n\nexport default Questions;\n","import Modal from \"./Modal\";\nimport SetupForm from \"./SetupForm\";\nimport Loading from \"./Loading\";\nimport Questions from \"./Questions\";\n\nimport { useGlobalContext } from './context'\n\n\nfunction App() {\n  const {showQuestion, showResult} = useGlobalContext()\n  return (\n    <main>\n      {/* setup */}\n      <SetupForm />\n\n      {/* loader */}\n      <Loading />\n\n      {/* Questions */}\n     {showQuestion && <Questions />}\n     \n      {/* Result */}\n      {showResult && <Modal />}\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}